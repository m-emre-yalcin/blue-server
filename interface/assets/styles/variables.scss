@mixin create-color-variables($hsl_colors) {
  @each $name, $hsl in $hsl_colors {
    $h: 0; // hue
    $s: 0; // saturation
    $l: 0; // lightness
    $a: 1; // alpha

    // get hue if exists
    @if map-has-key($hsl, h) {
      $h: map-get($hsl, h);
    }

    // get saturation if exists
    @if map-has-key($hsl, s) {
      $s: map-get($hsl, s);
    }

    // get lightness if exists
    @if map-has-key($hsl, l) {
      $l: map-get($hsl, l);
    }

    // get alpha if exists
    @if map-has-key($hsl, a) {
      $a: map-get($hsl, a);
    }

    #{'--' + $name + '-darker'}: hsla($h, $s, calc(#{$l} - 10%), $a);
    #{'--' + $name + '-dark'}: hsla($h, $s, calc(#{$l} - 5%), $a);
    #{'--' + $name}: hsla($h, $s, $l, $a);
    #{'--' + $name + '-light'}: hsla($h, $s, calc(#{$l} + 5%), $a);
    #{'--' + $name + '-lighter'}: hsla($h, $s, calc(#{$l} + 10%), $a);
    #{'--' + $name + '-hsl'}: $h, $s, $l;
  }
}

$lightColors: (
  primary: (
    h: 230deg,
    s: 100%,
    l: 100%,
  ),
  secondary: (
    h: 240,
    s: 20%,
    l: 79%,
  ),
  mavi: (
    h: 214,
    s: 90%,
    l: 64%,
  ),
  dark: (
    h: 210,
    s: 10%,
    l: 20%,
  ),
  shadow: (
    h: 5,
    s: 5%,
    l: 96%,
  ),
);

$darkColors: (
  primary: (
    h: 240,
    s: 21%,
    l: 6%,
  ),
  secondary: (
    h: 240,
    s: 21%,
    l: 6%,
  ),
  mavi: (
    h: 214,
    s: 90%,
    l: 64%,
  ),
  shadow: (
    h: 5,
    s: 5%,
    l: 96%,
  ),
);

$units: (
  xxs: 0.25rem,
  xs: 0.5rem,
  sm: 0.75rem,
  md: 1rem,
  lg: 1.5rem,
  xl: 2rem,
  xxl: 3rem,
);

// Define common units and vars:
#__next,
#__next ~ * {
  @each $name, $value in $units {
    #{'.p-' + $name} {
      padding: $value;
    }
    #{'.m-' + $name} {
      padding: $value;
    }
    #{'--' + $name}: $value;
  }
  --aside-width: 280px;
  --header-height: 80px;
  --header-height-collapsed: 60px;
}

// Define themes:
#__next,
#__next[light],
#__next[light] ~ * {
  @include create-color-variables($lightColors);
}
#__next[dark],
#__next[dark] ~ * {
  @include create-color-variables($lightColors);
}

@mixin flex_center {
  display: flex;
  justify-content: center;
  align-items: center;
}
